{
  "version": 3,
  "sources": ["../../../app/routes/login.jsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\routes\\\\\\\\login.jsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\routes\\\\login.jsx\");\n  import.meta.hot.lastModified = \"1709192776982.5205\";\n}\n// REMIX HMR END\n\nimport { json, redirect } from \"@remix-run/node\";\nimport { Form, useActionData, useLoaderData } from \"@remix-run/react\";\nimport { commitSession, getSession } from \"~/session.server\";\nexport async function loader({\n  request\n}) {\n  let session = await getSession(request.headers.get(\"cookie\"));\n  return session.data;\n}\nexport default function LoginPage() {\n  _s();\n  const data = useLoaderData();\n  const actionData = useActionData();\n  return <div className=\"mx-auto mt-8 max-w-xs lg:max-w-sm\">\r\n      {data.isAdmin ? <p>You're signed in!</p> : <Form method=\"post\">\r\n         <div className=\"space-y-2\">\r\n            <input className=\"w-full rounded-md border-gray-700 bg-gray-800 text-white focus:border-sky-600 focus:ring-sky-600\" type=\"email\" name=\"email\" required placeholder=\"Email\" />\r\n            <input className=\"w-full rounded-md border-gray-700 bg-gray-800 text-white focus:border-sky-600 focus:ring-sky-600\" type=\"password\" name=\"password\" required placeholder=\"Password\" />\r\n          </div>\r\n\r\n          <div className=\"mt-8\">\r\n          <button className=\"w-full rounded-md bg-sky-600 px-3 py-2 font-medium text-white hover:bg-sky-500 focus:outline-none focus:ring-2 focus:ring-sky-600 focus:ring-offset-2 focus:ring-offset-gray-900\">\r\n              Log in\r\n            </button>\r\n          </div>\r\n          {actionData?.error && <p className=\"mt-4 font-medium text-red-500\">{actionData.error}</p>}\r\n        </Form>}\r\n    </div>;\n}\n_s(LoginPage, \"1e25SFC8uAEJL70nU/asewoV2OE=\", false, function () {\n  return [useLoaderData, useActionData];\n});\n_c = LoginPage;\nexport async function action({\n  request\n}) {\n  let formData = await request.formData();\n  let {\n    email,\n    password\n  } = Object.fromEntries(formData);\n  if (email === \"sam@buildui.com\" && password === process.env.PASSWORD) {\n    let session = await getSession();\n    session.set(\"isAdmin\", true);\n    return redirect(\"/\", {\n      headers: {\n        \"Set-Cookie\": await commitSession(session)\n      }\n    });\n  } else {\n    let error;\n    if (!email) {\n      error = \"Email is required.\";\n    } else if (!password) {\n      error = \"Password is required.\";\n    } else {\n      error = \"Invalid login.\";\n    }\n    return json({\n      error\n    }, 401);\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"LoginPage\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;AAqBA,kBAA+B;AAE/B,qBAA0C;AAYpB;AAlCtB,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,iCAAmC,EAAE;AAAA,EAC9E;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAwB;AACxB,cAAY,IAAI,eAAe;AACjC;AAYe,SAAR,YAA6B;AAClC,KAAG;AACH,QAAM,OAAO,cAAc;AAC3B,QAAM,aAAa,cAAc;AACjC,SAAO,mDAAC,SAAI,WAAU,qCACjB,eAAK,UAAU,mDAAC,OAAE,iCAAH;AAAA;AAAA;AAAA;AAAA,SAAoB,IAAO,mDAAC,QAAK,QAAO,QACrD;AAAA,uDAAC,SAAI,WAAU,aACZ;AAAA,yDAAC,WAAM,WAAU,oGAAmG,MAAK,SAAQ,MAAK,SAAQ,UAAQ,MAAC,aAAY,WAAnK;AAAA;AAAA;AAAA;AAAA,aAA2K;AAAA,MAC3K,mDAAC,WAAM,WAAU,oGAAmG,MAAK,YAAW,MAAK,YAAW,UAAQ,MAAC,aAAY,cAAzK;AAAA;AAAA;AAAA;AAAA,aAAoL;AAAA,SAFvL;AAAA;AAAA;AAAA;AAAA,WAGC;AAAA,IAEA,mDAAC,SAAI,WAAU,QACf,6DAAC,YAAO,WAAU,oLAAmL,sBAArM;AAAA;AAAA;AAAA;AAAA,WAEE,KAHF;AAAA;AAAA;AAAA;AAAA,WAIA;AAAA,IACC,YAAY,SAAS,mDAAC,OAAE,WAAU,iCAAiC,qBAAW,SAAzD;AAAA;AAAA;AAAA;AAAA,WAA+D;AAAA,OAX9C;AAAA;AAAA;AAAA;AAAA,SAYzC,KAbC;AAAA;AAAA;AAAA;AAAA,SAcL;AACJ;AACA,GAAG,WAAW,gCAAgC,OAAO,WAAY;AAC/D,SAAO,CAAC,eAAe,aAAa;AACtC,CAAC;AACD,KAAK;AA+BL,IAAI;AACJ,aAAa,IAAI,WAAW;AAE5B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
